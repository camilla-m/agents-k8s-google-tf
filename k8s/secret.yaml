# Google ADK Credentials - Service Account Only
# Minimal secrets configuration for Gemini-only deployment

apiVersion: v1
kind: Secret
metadata:
  name: adk-credentials
  namespace: adk-travel
  labels:
    app: google-adk
    component: secrets
    version: "1.0"
  annotations:
    description: "Google Service Account for Vertex AI and Gemini access"
    creation-method: "kubectl-create"
type: Opaque
data:
  # service-account-key: <base64-encoded-service-account-json>
  # This will be populated by the setup script using:
  # kubectl create secret generic adk-credentials \
  #   --from-file=service-account-key=path/to/service-account.json \
  #   -n adk-travel
  
  # Placeholder to prevent YAML parsing errors - will be overwritten
  placeholder: cGxhY2Vob2xkZXI=  # base64 for "placeholder"

---
# Optional: Empty API keys secret to prevent deployment errors
# Can be removed entirely if deployment is updated
apiVersion: v1
kind: Secret
metadata:
  name: adk-api-keys
  namespace: adk-travel
  labels:
    app: google-adk
    component: secrets
    version: "1.0"
  annotations:
    description: "Empty API keys secret - using service account only"
type: Opaque
stringData:
  # Empty placeholders - not used by the application
  placeholder: "service-account-only"

---
# Minimal setup commands:

# 1. Create ONLY the service account credentials (REQUIRED):
# kubectl create secret generic adk-credentials \
#   --from-file=service-account-key=/path/to/your-service-account.json \
#   --namespace adk-travel

# 2. Optional - create empty API keys secret to prevent deployment errors:
# kubectl create secret generic adk-api-keys \
#   --from-literal=placeholder="not-used" \
#   --namespace adk-travel

# 3. OR remove all API key references from deployment.yaml

# 4. Verify:
# kubectl get secrets -n adk-travel
# kubectl describe secret adk-credentials -n adk-travel